package com.phenom.apply.impl.appconfigs;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Profile;
import org.springframework.context.support.PropertySourcesPlaceholderConfigurer;
import org.springframework.core.io.ClassPathResource;
import org.springframework.core.io.Resource;

@Configuration
public class PropertySourcesConfig {
	private static final Resource[] DEFAULT_PROPERTIES = new ClassPathResource[] {
			new ClassPathResource("application-default.properties"), };
	private static final Resource[] DEV_PROPERTIES = new ClassPathResource[] {
			new ClassPathResource("application-dev.properties"), };
	private static final Resource[] TEST_PROPERTIES = new ClassPathResource[] {
			new ClassPathResource("application-test.properties"), };
	private static final Resource[] UAT_PROPERTIES = new ClassPathResource[] {
			new ClassPathResource("application-uat.properties"), };
	private static final Resource[] PROD_PROPERTIES = new ClassPathResource[] {
			new ClassPathResource("application-prod.properties"), };

	@Profile("default")
	public static class DefaultConfig {
		@Bean
		public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {
			PropertySourcesPlaceholderConfigurer pspc = new PropertySourcesPlaceholderConfigurer();
			pspc.setLocations(DEFAULT_PROPERTIES);
			return pspc;
		}
	}

	@Profile("dev")
	public static class DevConfig {
		@Bean
		public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {
			PropertySourcesPlaceholderConfigurer pspc = new PropertySourcesPlaceholderConfigurer();
			pspc.setLocations(DEV_PROPERTIES);
			return pspc;
		}
	}

	@Profile("test")
	public static class TestConfig {
		@Bean
		public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {
			PropertySourcesPlaceholderConfigurer pspc = new PropertySourcesPlaceholderConfigurer();
			pspc.setLocations(TEST_PROPERTIES);
			return pspc;
		}
	}

	@Profile("uat")
	public static class DemoConfig {
		@Bean
		public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {
			PropertySourcesPlaceholderConfigurer pspc = new PropertySourcesPlaceholderConfigurer();
			pspc.setLocations(UAT_PROPERTIES);
			return pspc;
		}
	}

	@Profile("prod")
	public static class ProdConfig {
		@Bean
		public static PropertySourcesPlaceholderConfigurer propertySourcesPlaceholderConfigurer() {
			PropertySourcesPlaceholderConfigurer pspc = new PropertySourcesPlaceholderConfigurer();
			pspc.setLocations(PROD_PROPERTIES);
			return pspc;
		}
	}
