From srinivas to Everyone:  10:45 PM
package com.mize.cxconnect.json.util;

import java.io.InputStream;

import org.springframework.stereotype.Component;

import com.jayway.jsonpath.Configuration;
import com.jayway.jsonpath.DocumentContext;
import com.jayway.jsonpath.JsonPath;
import com.jayway.jsonpath.Option;

/**
 * @author srikanthkanumuri
 *
 */
@Component
public class JSONPathUtility {

	private Configuration config;

	/**
	 * 
	 */
	public JSONPathUtility() {
		config = Configuration.defaultConfiguration();
		config = config.addOptions(Option.DEFAULT_PATH_LEAF_TO_NULL);
	}

	/**
	 * @param jsonString
	 * @return
	 */
	public DocumentContext parse(String jsonString) {
		return JsonPath.using(config).parse(jsonString);
	}

	/**
	 * @param jsonStream
	 * @return
	 */
	public DocumentContext parse(InputStream jsonStream) {
		return JsonPath.using(config).parse(jsonStream);
	}
}

package com.mize.cxconnect.paccar.transformers;

import java.io.Serializable;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.apache.camel.Exchange;
import org.apache.camel.LoggingLevel;
import org.apache.camel.Message;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.jayway.jsonpath.DocumentContext;
import com.mize.cxconnect.paccar.servicedto.AppMessage;
import com.mize.cxconnect.paccar.servicedto.ServiceDTO;
import com.mize.cxconnect.paccar.util.JSONPathUtility;

import net.minidev.json.JSONArray;
import net.minidev.json.JSONObject;

@Component("createsupplierTransforme
From srinivas to Everyone:  10:48 PM
DocumentContext documentContext = jSONPathUtility.parse(body);
				if (documentContext != null) {
					//supplier name
					JSONArray intl = documentContext.read("$.intl[*]", JSONArray.class);
					if(intl != null && intl.size()>0){
						mainjsonobject.put("VendorName",StringUtils.defaultString(documentContext.read("$.intl[0].name", String.class)));
						//mainjsonobject.put("LocaleLanguage",StringUtils.defaultString(documentContext.read("$.intl[0].locale.languageCode", String.class)));
						//mainjsonobject.put("LocaleCountry",StringUtils.defaultString(documentContext.read("$.intl[0].locale.countryCode", String.class)));
					}



From srinivas to Everyone:  10:45 PM
package com.mize.cxconnect.json.util;

import java.io.InputStream;

import org.springframework.stereotype.Component;

import com.jayway.jsonpath.Configuration;
import com.jayway.jsonpath.DocumentContext;
import com.jayway.jsonpath.JsonPath;
import com.jayway.jsonpath.Option;

/**
 * @author srikanthkanumuri
 *
 */
@Component
public class JSONPathUtility {

	private Configuration config;

	/**
	 * 
	 */
	public JSONPathUtility() {
		config = Configuration.defaultConfiguration();
		config = config.addOptions(Option.DEFAULT_PATH_LEAF_TO_NULL);
	}

	/**
	 * @param jsonString
	 * @return
	 */
	public DocumentContext parse(String jsonString) {
		return JsonPath.using(config).parse(jsonString);
	}

	/**
	 * @param jsonStream
	 * @return
	 */
	public DocumentContext parse(InputStream jsonStream) {
		return JsonPath.using(config).parse(jsonStream);
	}
}

package com.mize.cxconnect.paccar.transformers;

import java.io.Serializable;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.apache.camel.Exchange;
import org.apache.camel.LoggingLevel;
import org.apache.camel.Message;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Component;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.jayway.jsonpath.DocumentContext;
import com.mize.cxconnect.paccar.servicedto.AppMessage;
import com.mize.cxconnect.paccar.servicedto.ServiceDTO;
import com.mize.cxconnect.paccar.util.JSONPathUtility;

import net.minidev.json.JSONArray;
import net.minidev.json.JSONObject;

@Component("createsupplierTransforme
From srinivas to Everyone:  10:50 PM
DocumentContext documentContext = jSONPathUtility.parse(body);
				if (documentContext != null) {
					
					//supplier name
					JSONArray intl = documentContext.read("$.intl[*]", JSONArray.class);
					if(intl != null && intl.size()>0){
						mainjsonobject.put("VendorName",StringUtils.defaultString(documentContext.read("$.intl[0].name", String.class)));
						//mainjsonobject.put("LocaleLanguage",StringUtils.defaultString(documentContext.read("$.intl[0].locale.languageCode", String.class)));
						//mainjsonobject.put("LocaleCountry",StringUtils.defaultString(documentContext.read("$.intl[0].locale.countryCode", String.class)));
					}
package org.apache.commons.lang3.StringUtils
ppdContactsList = documentContext.read("$.extensionList", JSONArray.class);
